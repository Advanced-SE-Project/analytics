name: CI/CD Pipeline for Analytics Microservice (Local Testing)

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres  # Static username (GitHub does not allow secrets here)
          POSTGRES_PASSWORD: postgres  # Static password (temporarily used)
          POSTGRES_DB: analytics_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DATABASE_URL_TEST: ${{ secrets.DATABASE_URL_TEST }}
      FLASK_ENV: test
      PORT: 5000

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Change PostgreSQL Credentials Securely
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -d analytics_db -c "ALTER USER postgres WITH PASSWORD '$POSTGRES_PASSWORD';"

      - name: Run database migrations
        run: |
          alembic upgrade head || echo "Skipping migrations"

      - name: Run unit tests
        run: |
          pytest --cov=app tests/

      - name: Upload coverage results
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ./coverage
